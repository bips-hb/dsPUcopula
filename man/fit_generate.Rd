% Generated by hand from R/server_funs.R
\name{fitPUcopulaDS}
\alias{fitPUcopulaDS}
\alias{estimateMarginalsDS}
\alias{simulateCopulaDS}
\alias{generateSyntheticDS}
\title{Fit the PU copula and generate synthetic data}
\description{
Core DataSHIELD server-side functions that fit the Partition-of-Unity copula model, estimate
marginal distributions and simulate synthetic data together with optional
privacy scores.
}
\usage{
fitPUcopulaDS(data_str, driver_strength_factor = 0.5, bin_size = 3,
  jitter = FALSE, family = "binom")

estimateMarginalsDS(data_str, method = "spline", k = 3)

simulateCopulaDS(n)

generateSyntheticDS(n = "n_rSynthetic", copula_str = "PU_copula_model",
  marginals_str = "marginal_models", training_data = "D_ori",
  control_data = "D_control", singling_out_check = TRUE,
  inference_check = TRUE, inference_check_ignore_na = FALSE,
  syndat_scores = TRUE, return_scores = FALSE)
}
\arguments{
  \item{data_str}{Character name of the processed training data object.}
  \item{driver_strength_factor}{Numeric scalar or vector controlling the driver
  strength passed to \code{PUcopula::PUCopula()}.}
  \item{bin_size}{Numeric or list of smoothing window sizes applied before
  fitting the copula.}
  \item{jitter}{Logical, numeric or named list controlling the amount of
  jittering applied to numeric columns.}
  \item{family}{Character name of the driver distribution used by
  \code{PUcopula::PUCopula()}.}
  \item{method}{Character vector specifying the marginal estimation method for
  numeric and ordered categorical variables.}
  \item{k}{Numeric or list controlling the smoothing neighbourhood used before
  fitting the marginals.}
  \item{n}{Number of synthetic records to simulate or the name of an object
  containing that number.}
  \item{copula_str}{Character name of the fitted copula object.}
  \item{marginals_str}{Character name of the list of marginal models.}
  \item{training_data}{Character name of the training data set.}
  \item{control_data}{Character name of the hold-out control data set.}
  \item{singling_out_check}{Logical; evaluate the Anonymeter singling out risk.}
  \item{inference_check}{Logical; evaluate inference attacks.}
  \item{inference_check_ignore_na}{Logical; remove missing secrets before
  running the inference attack.}
  \item{syndat_scores}{Logical; request syndat utility scores.}
  \item{return_scores}{Logical; return both synthetic data and score summaries.}
}
\value{
  \code{fitPUcopulaDS()} returns a \code{PUCopula} model.
  \code{estimateMarginalsDS()} returns a list of fitted marginal distributions.
  \code{simulateCopulaDS()} returns a matrix of simulated copula draws.
  \code{generateSyntheticDS()} returns a synthetic \code{data.frame}; if
  \code{return_scores = TRUE} a list containing the synthetic data and the
  associated score objects is returned.
}
